<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd 
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd" default-lazy-init="true">		
	<context:component-scan base-package="com">
	</context:component-scan>
	
	<context:property-placeholder location="classpath:c3p0.properties"/> 
	
	 <aop:aspectj-autoproxy>
	 </aop:aspectj-autoproxy>  
    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />  

    <bean class = "com.jst.common.system.aspect.impl.ServiceAspect">
    </bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
       <property name="user" value="${jdbc.user}"></property>  
       <property name="password" value="${jdbc.password}"></property>  
       <property name="driverClass" value="${jdbc.driverClass}"></property>  
       <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>  
         
       <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>  
       <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
       <property name="autoCommitOnClose" value = "false"/>
       <property name="maxIdleTime" value = "3"/>
   </bean>  
	
	<!-- <bean id = "dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/WsghjSource"></property>
        <property name="resourceRef" value="false"></property>  
	</bean> -->
	
<!-- 	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true"/>   -->
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
        		<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<!-- <prop key="hibernate.cache.use_structured_entries">true</prop> -->
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
				<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> -->
				<!-- <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop> -->
				<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop> -->
			</props>
		</property>
		
		<property name="packagesToScan" >
			<list>
				<value>com.jst.demo.test.model</value>
				<value>com.jst.common.model</value>
				<value>com.jst.vesms.model</value>
			</list>
		</property>
		<!--  
		<property name="annotatedClasses">
     		<list>
       			<value>com.jst.dumptruck.model.User</value>
     		</list>
   		</property>
   		-->
	</bean>
	
	<!-- <bean name="webServiceClient" class="com.jst.platformClient.client.WebServiceClient"></bean> -->
	
	<!-- <tx:annotation-driven  transaction-manager="transactionManager"/> -->
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="cancel*" propagation="REQUIRED" />
			<tx:method name="sign*" propagation="REQUIRED" />
			<tx:method name="evaluate*" propagation="REQUIRED" />
			<tx:method name="send*" propagation="REQUIRED"/>
			<tx:method name="doServiceAround" propagation="REQUIRED"/>
			<tx:method name="call*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<bean id="serviceAspect" class="com.jst.common.system.aspect.impl.ServiceAspect" />  
	<aop:config>				
		<aop:pointcut id="allManagerMethod" expression="execution(* com.jst.vesms.service.impl.*.*(..)) or execution(* com.jst.vesms.service.*.*(..)) or execution(* com.jst.common.service.*.*(..)) or execution(* com.jst.common.service.impl.*.*(..))"/>
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />

		<!-- 
	 	<aop:aspect id="serverA" ref="serviceAspect" order="5">
        	<aop:pointcut id="servicePoint" expression="execution(* com.jst.vesms.service.*.*(..))"/> 
        	<aop:before method="doBefore" pointcut-ref="servicePoint"/>
        	<aop:around method="doServiceAround" pointcut-ref="servicePoint"/>
   	  	</aop:aspect>
   		<aop:aspect id = "daoA" ref="serviceAspect" order="5">
    		<aop:pointcut expression="execution(* com.jst.vesms.dao.*.*(..))" id="methodPoint"/>
    		<aop:around method="doAround" pointcut-ref="methodPoint"/>
    	</aop:aspect>
    	 --> 
	</aop:config>
	
</beans>